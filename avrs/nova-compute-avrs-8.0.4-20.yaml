heat_template_version: queens

description: >
  OpenStack containerized Nova Compute Avrs service

parameters:
  DockerNovaComputeAvrsImage:
    description: image
    type: string
  DockerNovaLibvirtAvrsConfigImage:
    description: The container image to use for the nova_libvirt config_volume
    type: string
  ServiceData:
    default: {}
    description: Dictionary packing service data
    type: json
  ServiceNetMap:
    default: {}
    description: Mapping of service_name -> network name. Typically set
                 via parameter_defaults in the resource registry.  This
                 mapping overrides those in ServiceNetMapDefaults.
    type: json
  DefaultPasswords:
    default: {}
    type: json
  RoleName:
    default: ''
    description: Role name on which the service is applied
    type: string
  RoleParameters:
    default: {}
    description: Parameters specific to the role
    type: json
  EndpointMap:
    default: {}
    description: Mapping of service endpoint -> protocol. Typically set
                 via parameter_defaults in the resource registry.
    type: json
  EnableInstanceHA:
    default: false
    description: Whether to enable an Instance Ha configurarion or not.
                 This setup requires the Compute role to have the
                 PacemakerRemote service added to it.
    type: boolean

resources:

  ContainersCommon:
    type: ./containers-common.yaml

  MySQLClient:
    type: ../../puppet/services/database/mysql-client.yaml

  NovaComputeCommon:
    type: ./nova-compute-common.yaml
    properties:
      EndpointMap: {get_param: EndpointMap}
      ServiceData: {get_param: ServiceData}
      ServiceNetMap: {get_param: ServiceNetMap}
      DefaultPasswords: {get_param: DefaultPasswords}
      RoleName: {get_param: RoleName}
      RoleParameters: {get_param: RoleParameters}

  NovaComputeAvrsBase:
    type: ../../puppet/services/nova-compute.yaml
    properties:
      EndpointMap: {get_param: EndpointMap}
      ServiceData: {get_param: ServiceData}
      ServiceNetMap: {get_param: ServiceNetMap}
      DefaultPasswords: {get_param: DefaultPasswords}
      RoleName: {get_param: RoleName}
      RoleParameters: {get_param: RoleParameters}

  NovaComputeAvrsDockerBase:
    type: ../../docker/services/nova-compute.yaml
    properties:
      EnableInstanceHA: {get_param: EnableInstanceHA}
      DockerNovaComputeImage: {get_param: DockerNovaComputeAvrsImage}
      EndpointMap: {get_param: EndpointMap}
      ServiceData: {get_param: ServiceData}
      ServiceNetMap: {get_param: ServiceNetMap}
      DefaultPasswords: {get_param: DefaultPasswords}
      RoleName: {get_param: RoleName}
      RoleParameters: {get_param: RoleParameters}

  NovaLogging:
    type: OS::TripleO::Services::Logging::NovaCommon
    properties:
      DockerNovaImage: {get_param: DockerNovaComputeAvrsImage}
      NovaServiceName: 'compute'

conditions:
  enable_instance_ha: {equals: [{get_param: EnableInstanceHA}, true]}

outputs:
  role_data:
    description: Role data for the Nova Compute service.
    value:
      service_name: {get_attr: [NovaComputeAvrsBase, role_data, service_name]}
      cellv2_discovery: true
      config_settings:
        map_merge:
          - get_attr: [NovaComputeAvrsBase, role_data, config_settings]
          - get_attr: [NovaLogging, config_settings]
      logging_source: {get_attr: [NovaComputeAvrsBase, role_data, logging_source]}
      logging_groups: {get_attr: [NovaComputeAvrsBase, role_data, logging_groups]}
      service_config_settings: {get_attr: [NovaComputeAvrsBase, role_data, service_config_settings]}
      puppet_config:
        config_volume: nova_libvirt
        puppet_tags: nova_config,nova_paste_api_ini
        step_config:
          list_join:
            - "\n"
            - - {get_attr: [NovaComputeAvrsBase, role_data, step_config]}
              - {get_attr: [MySQLClient, role_data, step_config]}
        config_image: {get_param: DockerNovaLibvirtAvrsConfigImage}
      kolla_config:
        get_attr: [NovaComputeAvrsDockerBase, role_data, kolla_config]
      docker_config_scripts: 
        get_attr: [NovaComputeCommon, docker_config_scripts]
      docker_config:
        get_attr: [NovaComputeAvrsDockerBase, role_data, docker_config]
      host_prep_tasks:
        get_attr: [NovaComputeAvrsDockerBase, role_data, host_prep_tasks]
      upgrade_tasks:
        get_attr: [NovaComputeAvrsDockerBase, role_data, upgrade_tasks]
      fast_forward_upgrade_tasks:
        get_attr: [NovaComputeAvrsDockerBase, role_data, fast_forward_upgrade_tasks]

