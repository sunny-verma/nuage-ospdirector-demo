heat_template_version: 2014-10-16
description: 'Extra Post Deployment Config'
parameters:
  servers:
    type: json
  FastPathMask:
    type: string
    default: ""
  FastPathNics:
    type: string
    default: ""
  CorePortMapping:
    type: string
    default: ""
  FastPathMemory:
    type: string
    default: ""
  VmMemory:
    type: string
    default: ""
  NbMbuf:
    type: string
    default: ""
  FastPathOffload:
    type: string
    default: ""
  FastPathNicDescriptors:
    type: string
    default: ""
  FastPathOptions:
    type: string
    default: ""
  FastPathDPVI:
    type: string
    default: ""
resources:
  ExtraDeployments:
    type: OS::Heat::StructuredDeployments
    properties:
      servers:  {get_param: servers}
      config: {get_resource: ExtraConfig}
      # Do this on CREATE/UPDATE (which is actually the default)
      actions: ['CREATE', 'UPDATE']

  ExtraConfig:
    type: OS::Heat::SoftwareConfig
    properties:
      group: script
      config:
        str_replace:
          template: |
            #!/bin/bash
            set -x
            declare -A fast_path_params
            fast_path_params=( ["FP_MASK"]="$FP_MASK" ["FP_PORTS"]="$FP_PORTS" ["CORE_PORT_MAPPING"]="$CORE_PORT_MAPPING" ["FP_MEMORY"]="$FP_MEMORY" ["VM_MEMORY"]="$VM_MEMORY" ["NB_MBUF"]="$NB_MBUF" ["FP_OFFLOAD"]="$FP_OFFLOAD" ["FPNSDK_OPTIONS"]="$FPNSDK_OPTIONS" ["DPVI_MASK"]=$DPVI_MASK ["FP_OPTIONS"]=$FP_OPTIONS)
            for param in "${!fast_path_params[@]}" ; do
                FP_VAR=${fast_path_params[$param]}
                if [[ ! -z $FP_VAR ]] ; then
                    echo ": \${$param:=$FP_VAR}" >> /etc/fast-path.env
                fi
            done
            crudini --set /var/lib/config-data/puppet-generated/nova_libvirt/etc/nova/nova.conf DEFAULT monkey_patch true
            crudini --set /var/lib/config-data/puppet-generated/nova_libvirt/etc/nova/nova.conf DEFAULT monkey_patch_modules nova.virt.libvirt.vif:openstack_6wind_extensions.queens.nova.virt.libvirt.vif.decorator
            crudini --set /etc/fp-vdev.ini pmd-vhost sockfolder /var/lib/vhost_sockets
            systemctl enable avrs
            systemctl start avrs
            docker restart nova_libvirt
            docker restart nova_compute
          params:
            $FP_MASK: {get_param: FastPathMask}
            $FP_PORTS: {get_param: FastPathNics}
            $CORE_PORT_MAPPING: {get_param: CorePortMapping}
            $FP_MEMORY: {get_param: FastPathMemory}
            $VM_MEMORY: {get_param: VmMemory}
            $NB_MBUF: {get_param: NbMbuf}
            $FP_OFFLOAD: {get_param: FastPathOffload}
            $FPNSDK_OPTIONS: {get_param: FastPathNicDescriptors}
            $DPVI_MASK: {get_param: FastPathDPVI}
            $FP_OPTIONS: {get_param: FastPathOptions}
